language: node_js

node_js:
  - "10"

python:
  - "3.6"

dist: xenial

services:
  - docker

sudo: required

cache:
  directories:
    - node_modules

env:
  - DEPLOY_PACKAGE=true

matrix:
  fast_finish: true

before_install:
  - npm install -g npm
  - npm install -g ganache-cli@~6.4.4 greenkeeper-lockfile codacy-coverage
  - pyenv global system 3.6.7
  - docker pull oceanprotocol/echidna:solc-0.5.6
  - sudo apt-get -y install gnupg-agent python3-setuptools
  - pip3 install slither-analyzer==0.6.4
  - |
    if [ "${DEPLOY_PACKAGE}" = "true" ] && [ ! -z "${TRAVIS_TAG}" ]; then
      sudo apt-get -y install gnupg-agent python3-setuptools
      gpg-agent --daemon --no-grab --write-env-file $HOME/.gpg-agent-info
      pip3 install --upgrade --user twine six==1.10.0 wheel==0.31.0 setuptools
      sudo apt install -y openjdk-8-jdk openjdk-8-jre maven
      export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64
      export PATH=${JAVA_HOME}/bin:${PATH}
      java -version
      mvn -version
      bash -x scripts/maven.sh
      echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import
      echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust
      version_line=$(cat .bumpversion.cfg | grep current_version)
      release_version=${version_line##* }
      export release_version
      echo "Release version: $release_version"
    fi

before_script:
  - greenkeeper-lockfile-update
  - ganache-cli > ganache-cli.log &

script:
  - npm run lint
  - npm run test:cover
  - npm run test:report-coverage
  - npm run clean
  - npm run compile
  - npm run test:upgrade
  - npm run test:echidna
  - npm run deploy:development -- --deeper-clean
  - git status
  - git add package-lock.json artifacts/EscrowAccessSecretStoreTemplate.development.json artifacts/EscrowComputeExecutionTemplate.development.json
  - git diff-index --quiet HEAD || git commit -m "Travis update"

after_script:
  - greenkeeper-lockfile-upload

notifications:
  email: false

deploy:
# JAVA PACKAGE HAS BEEN DISABLED
#  - provider: script
#    script: bash -x ./scripts/maven.sh && mvn clean deploy --settings .maven.xml -B -U -Prelease
#    skip_cleanup: true
#    on:
#      tags: true
#      all_branches: true
#      condition: $DEPLOY_PACKAGE = true
  - provider: npm
    email: "devops@oceanprotocol.com"
    api_key: ${NPM_TOKEN}
    skip_cleanup: true
    on:
      tags: true
      all_branches: true
      condition: $DEPLOY_PACKAGE = true

  - provider: script
    script: bash -x ./scripts/deploy_pypi.sh
    skip_cleanup: true
    on:
      tags: true
      all_branches: true
      condition: $DEPLOY_PACKAGE = true

  - provider: releases
    skip_cleanup: true
    api_key: $GITHUB_TOKEN
    name: "$release_version"
    on:
      tags: true
      all_branches: true
      condition: $DEPLOY_PACKAGE = true
